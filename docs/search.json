[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Team Germen Obasi",
    "section": "",
    "text": "This is our project webpage.\nPlease stay tuned to follow our project activities.\nThis is our template.\n\nTeam Members\n\nBerke Pekşen\nTuna Merih Germen\nTuncay Özkardeş\nMuharrem Baran Acarlı\nAyberk Bakılan\nMehmet Ali Genç\n\n\n\nProject Topic\nIn this project we did in the Data Analysis course, we will use the data on happiness by year and literacy rate by year, which we received from TUIK. The happiness data according to the years we will use includes happiness rates by age groups between 2003 and 2022. The other data we will use, the literacy rate by years, includes the numbers and rates of “literate, illiterate and unknown” by gender between 2008 and 2022. The reason why we chose this data is that we want to learn the relationship between a person’s educational status and their sense of happiness. By analyzing these two data groups, we will try to determine whether there is a correlation between these two situations, and if so, what kind of relationship there is between them. As the general purpose of this project and analysis, we will try to prove that these two data, which are thought to be related to each other and seem to have a definite relationship between them, are independent of each other and there will be no correlation.\n\n\nData Set\nData\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "Analysis",
    "section": "",
    "text": "About this site\nprint(final_data)\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\ndata &lt;- get(load(\"final_data.RData\"))\nages &lt;- c(\"Happy(18-24)(%)\",\"Happy(25-34)(%)\",\"Happy(35-44)(%)\",\"Happy(45-54)(%)\",\"Happy(55-64)(%)\",\"Happy(65+)(%)\")\nyear_ages &lt;- data |&gt; select(Year, ages)\n\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(ages)\n\n  # Now:\n  data %&gt;% select(all_of(ages))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\n\nCode\nyear_ages\n\n\n   Year Happy(18-24)(%) Happy(25-34)(%) Happy(35-44)(%) Happy(45-54)(%)\n1  2008        59.09000        55.69000        52.90000        51.74000\n2  2009        57.41000        55.92000        53.49000        51.31000\n3  2010        63.93000        64.36000        57.49000        58.93000\n4  2011        69.50000        62.00000        60.70000        59.70000\n5  2012        64.60000        65.60000        58.50000        55.50000\n6  2013        65.09000        60.29000        55.13000        54.49000\n7  2014        61.20000        57.90000        52.10000        51.50000\n8  2015        63.78700        58.60600        54.17800        51.66800\n9  2016        65.13400        61.96100        58.22800        58.34400\n10 2017        61.30150        58.57135        55.85570        53.08768\n11 2018        55.35172        53.24284        50.74637        47.84929\n12 2019        56.67982        52.04614        50.64638        49.70393\n13 2020        47.14917        46.81024        45.37726        46.22153\n14 2021        44.48447        46.57319        50.22658        48.75430\n15 2022        47.90992        46.76606        47.93897        47.96122\n   Happy(55-64)(%) Happy(65+)(%)\n1         56.93000      61.60000\n2         51.99000      54.27000\n3         61.28000      60.03000\n4         62.30000      57.80000\n5         59.30000      60.30000\n6         58.15000      63.36000\n7         54.80000      62.80000\n8         55.07000      56.84000\n9         62.30000      64.47600\n10        56.21379      66.09250\n11        55.65419      61.19950\n12        48.67123      58.54024\n13        48.99747      57.74405\n14        50.91547      56.16328\n15        52.49462      57.72237\n\n\nCode\nggplot(year_ages, aes(x = Year)) +\n  geom_line(aes(y =`Happy(18-24)(%)`, color = ages[1], group=1)) +\n  geom_line(aes(y =`Happy(25-34)(%)`, color = ages[2], group=1)) +\n  geom_line(aes(y =`Happy(35-44)(%)`, color = ages[3], group=1)) +\n  geom_line(aes(y =`Happy(45-54)(%)`, color = ages[4], group=1)) +\n  geom_line(aes(y =`Happy(55-64)(%)`, color = ages[5], group=1)) +\n  geom_line(aes(y =`Happy(65+)(%)`, color = ages[6], group=1)) +\n  labs(title = \"Happiness Rates by Age Groups by Year\")\n\n\n\n\n\nCode\n#GRAPH---2\nrate_of_change &lt;- c()\n\nfor (x in (1:14)) {\n  ratio &lt;- ((as.numeric(final_data[(x + 1), \"Literate(%)\"]) * 100) / as.numeric(final_data[x, \"Literate(%)\"])) - 100\n  print(ratio)\n  rate_of_change &lt;- c(rate_of_change,ratio)\n}\n\n\n[1] 0.8991631\n[1] 2.030331\n[1] 1.559983\n[1] 0.8646199\n[1] 0.3549419\n[1] 0.1920811\n[1] 0.1695208\n[1] 0.286889\n[1] 0.2866629\n[1] 0.2788856\n[1] 0.335547\n[1] 0.2194389\n[1] 0.1966283\n[1] 0.1742341\n\n\nCode\nrate_of_change\n\n\n [1] 0.8991631 2.0303310 1.5599834 0.8646199 0.3549419 0.1920811 0.1695208\n [8] 0.2868890 0.2866629 0.2788856 0.3355470 0.2194389 0.1966283 0.1742341\n\n\nCode\nx_axis = c(\"2008-2009\",\"2009-2010\",\"2010-2011\",\"2011-2012\",\"2012-2013\",\"2013-2014\",\"2014-2015\",\"2015-2016\",\"2016-2017\",\"2017-2018\",\"2018-2019\",\"2019-2020\",\"2020-2021\",\"2021-2022\")\nmode(x_axis)\n\n\n[1] \"character\"\n\n\nCode\nrow_names &lt;- c(\"rate_of_change\", \"x_axis\")\ndf &lt;- data.frame(rate_of_change, x_axis)\n\nggplot(df, aes(x = x_axis, y = as.numeric(rate_of_change))) + geom_col() +\n  labs(title = \"Rate of Increase in Literacy by Years\") + \n  xlab(\"Rate of Change\") + \n  ylab(\"Year\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\nCode\n#GRAPH---3\ndata$`Happy(55-64)(%)`[9] &lt;- 62.3001\n\nhappy_18_24_pop &lt;- sapply(data$`Happy(18-24)(%)`, function(x) {x * data$`Pop(18-24)`[which(data$`Happy(18-24)(%)` == x)]})\nhappy_25_34_pop &lt;- sapply(data$`Happy(25-34)(%)`, function(x) {x * data$`Pop(25-34)`[which(data$`Happy(25-34)(%)` == x)]})\nhappy_35_44_pop &lt;- sapply(data$`Happy(35-44)(%)`, function(x) {x * data$`Pop(35-44)`[which(data$`Happy(35-44)(%)` == x)]})\nhappy_45_54_pop &lt;- sapply(data$`Happy(45-54)(%)`, function(x) {x * data$`Pop(45-54)`[which(data$`Happy(45-54)(%)` == x)]})\nhappy_55_64_pop &lt;- sapply(data$`Happy(55-64)(%)`, function(x) {x * data$`Pop(55-64)`[which(data$`Happy(55-64)(%)` == x)]})\nhappy_65_pop &lt;- sapply(data$`Happy(65+)(%)`, function(x) {x * data$`Pop(65+)`[which(data$`Happy(65+)(%)` == x)]})\n\nhappy_pop_df &lt;- data.frame(happy_18_24_pop, happy_25_34_pop, happy_35_44_pop, happy_45_54_pop, happy_55_64_pop, happy_65_pop)\nhappy_pop_total_df &lt;- happy_pop_df |&gt; mutate(Total_Happy = rowSums(happy_pop_df))\n\n\nhappy_pop_total_ratio &lt;- sapply(as.numeric(happy_pop_total_df$Total_Happy), function(x) {x / as.numeric(data$`Pop(Total)`[which(happy_pop_total_df$Total_Happy == x)])})\nprint(happy_pop_total_ratio)\n\n\n [1] 38.24621 37.41853 42.42036 43.33331 42.70288 41.59463 39.83181 40.27278\n [9] 43.78367 41.59795 38.40338 37.92216 35.04362 36.03976 36.52276\n\n\nCode\nggplot(data, aes(x = Year)) +\n    geom_line(aes(y = as.numeric(`Literate(%)`), color = \"red\", group=2)) +\n  geom_line(aes(y = happy_pop_total_ratio, color = \"blue\", group=1)) + \n  labs(title = \"Literacy and Happiness by Years\") + ylab(\"Literate(%)\") +\n  scale_color_manual(values = c(\"red\", \"blue\"),\n                     labels = c(\"Literate\",\"Happy Population Total\"))\n\n\n\n\n\nCode\n#Pie Plot\n\nhappiness_percentages &lt;- data[11, c(\"Happy(18-24)(%)\", \"Happy(25-34)(%)\", \"Happy(35-44)(%)\", \n                                    \"Happy(45-54)(%)\", \"Happy(55-64)(%)\", \"Happy(65+)(%)\")]\nhappiness_percentages\n\n\n   Happy(18-24)(%) Happy(25-34)(%) Happy(35-44)(%) Happy(45-54)(%)\n11        55.35172        53.24284        50.74637        47.84929\n   Happy(55-64)(%) Happy(65+)(%)\n11        55.65419       61.1995\n\n\nCode\nactual_populations &lt;- as.numeric(happiness_percentages)\n\npie(actual_populations, labels = (c(\"Happy(18-24)(%)\", \"Happy(25-34)(%)\", \"Happy(35-44)(%)\", \n                                            \"Happy(45-54)(%)\", \"Happy(55-64)(%)\", \"Happy(65+)(%)\")), main = \"Population Distribution by Age Group (2018)\")\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Data",
    "section": "",
    "text": "Literacy\nhttps://data.tuik.gov.tr/Bulten/DownloadIstatistikselTablo?p=yXmIYK8WxbFjx9vwEP4DRDs/0QI39KP4NNmdD6DRUPH18uHwGPANE1RP22gwvNrY\n\n\nHappiness\nhttps://data.tuik.gov.tr/Bulten/DownloadIstatistikselTablo?p=N89Qbttng2OjG24yrCEBzaOzuq4X8by6elSnnwevHden73AZWfHzCEqdOEI/YDAs\n\n\nPopulation\nhttps://data.tuik.gov.tr/Bulten/DownloadIstatistikselTablo?p=f2jiwkpabpX7vcxzn4xamSZjOnq4344Y0rlb9MSlQBzyaBzjBG2iLIb2RP0Rk03d\n\n\n\n\n Back to top"
  }
]