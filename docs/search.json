[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Team Germen Obasi",
    "section": "",
    "text": "This is our project webpage.\nPlease stay tuned to follow our project activities.\nThis is our template.\n\nTeam Members\n\nBerke Pekşen\nTuna Merih Germen\nTuncay Özkardeş\nMuharrem Baran Acarlı\nAyberk Bakılan\nMehmet Ali Genç\n\n\n\nProject Topic\nIn this project we did in the Data Analysis course, we will use the data on happiness by year and literacy rate by year, which we received from TUIK. The happiness data according to the years we will use includes happiness rates by age groups between 2003 and 2022. The other data we will use, the literacy rate by years, includes the numbers and rates of “literate, illiterate and unknown” by gender between 2008 and 2022. The reason why we chose this data is that we want to learn the relationship between a person’s educational status and their sense of happiness. By analyzing these two data groups, we will try to determine whether there is a correlation between these two situations, and if so, what kind of relationship there is between them. As the general purpose of this project and analysis, we will try to prove that these two data, which are thought to be related to each other and seem to have a definite relationship between them, are independent of each other and there will be no correlation.\n\n\nData Set\nData\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "Analysis",
    "section": "",
    "text": "About this site\nprint(final_data)\n\n\nCode\nlibrary(readxl)\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(tidyr)\nlibrary(zoo)\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nCode\n#1st DATASET\ndata_literate &lt;- read_xls(\"Population_by_literacy_and_gender.xls\", col_names = TRUE, range = \"A4:Q27\")\n\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\n\nCode\ndata_literate_t &lt;- t(data_literate)\ndata_literate_percentage &lt;- data.frame(data_literate_t[-c(1,2), c(16,17)])\ndata_literate_end &lt;- tibble::rownames_to_column(data_literate_percentage, \"Year\")\ncolnames(data_literate_end)[2:3] &lt;- c(\"Literate(%)\", \"Illiterate(%)\")\n\n#2nd DATASET\ndata_population &lt;- read_xls(\"Population.xls\", col_names = TRUE, range = \"A4:AA45\")\ndata_population_clean &lt;- data_population[-c(1,3,4,5,21,22,24,25,26), -c(2:12)]\ndata_population_clean_t &lt;- t(data_population_clean)\ncolnames(data_population_clean_t) &lt;- data_population_clean_t[1,1:32]\ndata_population_clean_t &lt;- data_population_clean_t[-1,]\ndata_population_clean_t_sum &lt;- data_population_clean_t\n\nfor (i in 1:16){\n  data_population_clean_t_sum[,i] &lt;- as.numeric(data_population_clean_t[,i]) + as.numeric(data_population_clean_t[,(i+16)])\n}\n\ndata_population_clean_t_sum &lt;- data_population_clean_t_sum[,-c(17:32)]\ndata_population_clean_t_sum[,\"15-19\"] &lt;- round(as.numeric(data_population_clean_t_sum[,\"15-19\"]) * 2 / 5)\ncolnames(data_population_clean_t_sum)[colnames(data_population_clean_t_sum) == \"15-19\"] &lt;- \"18-19\"\n\ndata_population_by_age &lt;- data.frame(data_population_clean_t_sum)\ndata_population_by_age &lt;- data_population_by_age |&gt; mutate(\"18-24\" = as.numeric(data_population_by_age[,2]) + as.numeric(data_population_by_age[,3])) |&gt; \n  mutate(\"25-34\" = as.numeric(data_population_by_age[,4]) + as.numeric(data_population_by_age[,5])) |&gt;\n  mutate(\"35-44\" = as.numeric(data_population_by_age[,6]) + as.numeric(data_population_by_age[,7])) |&gt;\n  mutate(\"45-54\" = as.numeric(data_population_by_age[,8]) + as.numeric(data_population_by_age[,9])) |&gt;\n  mutate(\"55-64\" = as.numeric(data_population_by_age[,10]) + as.numeric(data_population_by_age[,11])) |&gt;\n  mutate(\"65+\" = as.numeric(data_population_by_age[,12]) + as.numeric(data_population_by_age[,13]) + as.numeric(data_population_by_age[,14]) + as.numeric(data_population_by_age[,15]) + as.numeric(data_population_by_age[,16]))\n\ndata_population_by_age &lt;- data_population_by_age[,-c(2:16)]\ncolumn_names &lt;- c(\"Pop(Total)\", \"Pop(18-24)\", \"Pop(25-34)\", \"Pop(35-44)\", \"Pop(45-54)\", \"Pop(55-64)\", \"Pop(65+)\")\ncolnames(data_population_by_age) &lt;- column_names\ndata_population_end &lt;- tibble::rownames_to_column(data_population_by_age, \"Year\")\n\n#3rd DATASET\ndata_happiness &lt;- read_xls(\"Happiness-Age.xls\", col_names = TRUE, range = \"A5:H85\")\n\n\nNew names:\n• `` -&gt; `...2`\n\n\nCode\ndata_happiness_no_Na &lt;- data_happiness[-c(1:21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77),]\ndata_happiness_no_Na &lt;- na.locf(data_happiness_no_Na, fromLast = FALSE)\ndata_happiness_no_Na_wider &lt;- data_happiness_no_Na |&gt; gather(key = \"Age\", value = \"Percentage\", 3,4,5,6,7,8) |&gt; pivot_wider(names_from = c(2, \"Age\"), values_from = \"Percentage\")\n\ncolumn_names_happiness &lt;- as.character(c(\"Year\", \"Happy(18-24)(%)\", \"Neutral(18-24)(%)\", \"Unhappy(18-24)(%)\", \"Happy(25-34)(%)\", \"Neutral(25-34)(%)\", \"Unhappy(25-34)(%)\", \"Happy(35-44)(%)\", \"Neutral(35-44)(%)\", \"Unhappy(35-44)(%)\", \"Happy(45-54)(%)\", \"Neutral(45-54)(%)\", \"Unhappy(45-54)(%)\", \"Happy(55-64)(%)\", \"Neutral(55-64)(%)\", \"Unhappy(55-64)(%)\", \"Happy(65+)(%)\", \"Neutral(65+)(%)\", \"Unhappy(65+)(%)\"))\ncolnames(data_happiness_no_Na_wider) &lt;- column_names_happiness\ndata_happiness_end &lt;- data_happiness_no_Na_wider\ndata_happiness_end$Year &lt;- as.character(data_happiness_end$Year)\n\n#Final DATASET\nliterate_population &lt;- left_join(data_literate_end, data_population_end, by = \"Year\")\nliterate_population_happiness &lt;- left_join(literate_population, data_happiness_end, by = \"Year\")\n\nfinal_data &lt;- literate_population_happiness |&gt; relocate(\"Pop(Total)\", .after = 28)|&gt; \n  relocate(\"Pop(18-24)\", .before = \"Happy(18-24)(%)\") |&gt; \n  relocate(\"Pop(25-34)\", .before = \"Happy(25-34)(%)\") |&gt; \n  relocate(\"Pop(35-44)\", .before = \"Happy(35-44)(%)\") |&gt; \n  relocate(\"Pop(45-54)\", .before = \"Happy(45-54)(%)\") |&gt; \n  relocate(\"Pop(55-64)\", .before = \"Happy(55-64)(%)\") |&gt; \n  relocate(\"Pop(65+)\", .before = \"Happy(65+)(%)\")\n\nsave(final_data, file = \"final_data.RData\")\n\n\n\n\nCode\nprint(final_data)\n\n\n   Year        Literate(%)      Illiterate(%) Pop(18-24) Happy(18-24)(%)\n1  2008 90.007406587375414 9.9925934126245828    8730600        59.09000\n2  2009       9.081672e+01       9.183279e+00    8773965        57.41000\n3  2010       9.266060e+01       7.339400e+00    8778710        63.93000\n4  2011       9.410609e+01       5.893909e+00    8751624        69.50000\n5  2012       9.491975e+01       5.080252e+00    8748310        64.60000\n6  2013       9.525666e+01       4.743344e+00    8805113        65.09000\n7  2014       9.543963e+01       4.560366e+00    8871028        61.20000\n8  2015       9.560142e+01       4.398581e+00    8948367        63.78700\n9  2016       9.587569e+01       4.124307e+00    9015051        65.13400\n10 2017       9.615053e+01       3.849470e+00    9067145        61.30150\n11 2018       9.641868e+01       3.581320e+00    9116836        55.35172\n12 2019       9.674221e+01       3.257794e+00    9156716        56.67982\n13 2020       9.695450e+01       3.045501e+00    9155682        47.14917\n14 2021       9.714514e+01       2.854856e+00    9233464        44.48447\n15 2022       9.731440e+01       2.685604e+00    9160752        47.90992\n   Neutral(18-24)(%) Unhappy(18-24)(%) Pop(25-34) Happy(25-34)(%)\n1           28.30000         12.600000   12328944        55.69000\n2           31.45000         11.140000   12419892        55.92000\n3           26.49000          9.580000   12647889        64.36000\n4           25.00000          5.400000   12801867        62.00000\n5           26.00000          9.400000   12815605        65.60000\n6           26.82000          8.080000   12830001        60.29000\n7           30.40000          8.400000   12789496        57.90000\n8           28.41500          7.798000   12691399        58.60600\n9           26.30100          8.565000   12556452        61.96100\n10          29.90471          8.793788   12528466        58.57135\n11          35.13875          9.509531   12609622        53.24284\n12          33.75431          9.565878   12730328        52.04614\n13          38.63200         14.218833   12689848        46.81024\n14          35.10865         20.406887   12818686        46.57319\n15          36.41563         15.674453   12868216        46.76606\n   Neutral(25-34)(%) Unhappy(25-34)(%) Pop(35-44) Happy(35-44)(%)\n1           31.81000          12.50000   10070734        52.90000\n2           31.40000          12.68000   10181458        53.49000\n3           26.32000           9.32000   10160840        57.49000\n4           28.10000           9.90000   10403516        60.70000\n5           27.30000           7.10000   10795237        58.50000\n6           30.89000           8.81000   11134409        55.13000\n7           32.90000           9.20000   11428673        52.10000\n8           31.88100           9.51300   11755903        54.17800\n9           28.70200           9.33800   12128650        58.22800\n10          31.93865           9.49000   12301515        55.85570\n11          36.39018          10.36698   12422098        50.74637\n12          34.27075          13.68311   12552227        50.64638\n13          38.13035          15.05941   12708693        45.37726\n14          36.35105          17.07576   12933370        50.22658\n15          36.63361          16.60033   12972770        47.93897\n   Neutral(35-44)(%) Unhappy(35-44)(%) Pop(45-54) Happy(45-54)(%)\n1           32.30000          14.80000    7927348        51.74000\n2           33.20000          13.31000    8195696        51.31000\n3           31.18000          11.34000    8406580        58.93000\n4           30.30000           9.10000    8578520        59.70000\n5           30.20000          11.30000    8738619        55.50000\n6           33.76000          11.11000    8954555        54.49000\n7           36.00000          11.90000    9112684        51.50000\n8           33.98600          11.83500    9222988        51.66800\n9           30.84700          10.92400    9504758        58.34400\n10          33.27907          10.86522    9730609        53.08768\n11          36.92331          12.33032   10012031        47.84929\n12          37.16409          12.18953   10208932        49.70393\n13          39.44927          15.17347   10148298        46.22153\n14          33.48964          16.28378   10416745        48.75430\n15          35.71641          16.34462   10818158        47.96122\n   Neutral(45-54)(%) Unhappy(45-54)(%) Pop(55-64) Happy(55-64)(%)\n1           32.54000          15.71000    5066402        56.93000\n2           30.96000          17.73000    5306781        51.99000\n3           29.23000          11.84000    5756267        61.28000\n4           28.60000          11.70000    6020902        62.30000\n5           32.10000          12.40000    6147100        59.30000\n6           33.16000          12.35000    6315645        58.15000\n7           32.70000          15.80000    6527278        54.80000\n8           34.67000          13.66200    6789637        55.07000\n9           30.74600          10.91000    7058684        62.30000\n10          32.99353          13.91879    7337965        56.21379\n11          36.42783          15.72288    7618202        55.65419\n12          35.67746          14.61861    7944766        48.67123\n13          38.46309          15.31538    8151981        48.99747\n14          33.92495          17.32076    8319096        50.91547\n15          35.72690          16.31188    8483812        52.49462\n   Neutral(55-64)(%) Unhappy(55-64)(%) Pop(65+) Happy(65+)(%) Neutral(65+)(%)\n1           28.40000          14.67000  4893423      61.60000        24.36000\n2           29.22000          18.79000  5083414      54.27000        27.79000\n3           27.82000          10.90000  5327736      60.03000        27.06000\n4           26.40000          11.30000  5490715      57.80000        28.60000\n5           29.00000          11.70000  5682003      60.30000        28.70000\n6           28.88000          12.97000  5891694      63.36000        23.62000\n7           31.30000          14.00000  6192962      62.80000        24.60000\n8           30.70100          14.22900  6495239      56.84000        30.74000\n9           24.94200          12.75800  6651503      64.47600        25.03100\n10          31.01922          12.76699  6895385      66.09250        22.94151\n11          31.75922          12.58659  7186204      61.19950        26.75070\n12          35.50906          15.81971  7550727      58.54024        29.23618\n13          36.50081          14.50173  7953555      57.74405        30.43805\n14          33.71747          15.36706  8245124      56.16328        30.82194\n15          31.68412          15.82126  8451669      57.72237        28.60509\n   Unhappy(65+)(%) Pop(Total)\n1         14.03000   71517100\n2         17.94000   72561312\n3         12.92000   73722988\n4         13.50000   74724269\n5         11.10000   75627384\n6         13.01000   76667864\n7         12.60000   77695904\n8         12.42000   78741053\n9         10.49400   79814871\n10        10.96599   80810525\n11        12.04981   82003882\n12        12.22358   83154997\n13        11.81790   83614362\n14        13.01478   84680273\n15        13.67254   85279553\n\n\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ ggplot2   3.4.4     ✔ stringr   1.5.0\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\ndata &lt;- get(load(\"final_data.RData\"))\nages &lt;- c(\"Happy(18-24)(%)\",\"Happy(25-34)(%)\",\"Happy(35-44)(%)\",\"Happy(45-54)(%)\",\"Happy(55-64)(%)\",\"Happy(65+)(%)\")\nyear_ages &lt;- data |&gt; select(Year, ages)\n\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(ages)\n\n  # Now:\n  data %&gt;% select(all_of(ages))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\n\nCode\nyear_ages\n\n\n   Year Happy(18-24)(%) Happy(25-34)(%) Happy(35-44)(%) Happy(45-54)(%)\n1  2008        59.09000        55.69000        52.90000        51.74000\n2  2009        57.41000        55.92000        53.49000        51.31000\n3  2010        63.93000        64.36000        57.49000        58.93000\n4  2011        69.50000        62.00000        60.70000        59.70000\n5  2012        64.60000        65.60000        58.50000        55.50000\n6  2013        65.09000        60.29000        55.13000        54.49000\n7  2014        61.20000        57.90000        52.10000        51.50000\n8  2015        63.78700        58.60600        54.17800        51.66800\n9  2016        65.13400        61.96100        58.22800        58.34400\n10 2017        61.30150        58.57135        55.85570        53.08768\n11 2018        55.35172        53.24284        50.74637        47.84929\n12 2019        56.67982        52.04614        50.64638        49.70393\n13 2020        47.14917        46.81024        45.37726        46.22153\n14 2021        44.48447        46.57319        50.22658        48.75430\n15 2022        47.90992        46.76606        47.93897        47.96122\n   Happy(55-64)(%) Happy(65+)(%)\n1         56.93000      61.60000\n2         51.99000      54.27000\n3         61.28000      60.03000\n4         62.30000      57.80000\n5         59.30000      60.30000\n6         58.15000      63.36000\n7         54.80000      62.80000\n8         55.07000      56.84000\n9         62.30000      64.47600\n10        56.21379      66.09250\n11        55.65419      61.19950\n12        48.67123      58.54024\n13        48.99747      57.74405\n14        50.91547      56.16328\n15        52.49462      57.72237\n\n\nCode\nggplot(year_ages, aes(x = Year)) +\n  geom_line(aes(y =`Happy(18-24)(%)`, color = ages[1], group=1)) +\n  geom_line(aes(y =`Happy(25-34)(%)`, color = ages[2], group=1)) +\n  geom_line(aes(y =`Happy(35-44)(%)`, color = ages[3], group=1)) +\n  geom_line(aes(y =`Happy(45-54)(%)`, color = ages[4], group=1)) +\n  geom_line(aes(y =`Happy(55-64)(%)`, color = ages[5], group=1)) +\n  geom_line(aes(y =`Happy(65+)(%)`, color = ages[6], group=1)) +\n  labs(title = \"Happiness Rates by Age Groups by Year\")\n\n\n\n\n\nCode\n#GRAPH---2\nrate_of_change &lt;- c()\n\nfor (x in (1:14)) {\n  ratio &lt;- ((as.numeric(final_data[(x + 1), \"Literate(%)\"]) * 100) / as.numeric(final_data[x, \"Literate(%)\"])) - 100\n  print(ratio)\n  rate_of_change &lt;- c(rate_of_change,ratio)\n}\n\n\n[1] 0.8991631\n[1] 2.030331\n[1] 1.559983\n[1] 0.8646199\n[1] 0.3549419\n[1] 0.1920811\n[1] 0.1695208\n[1] 0.286889\n[1] 0.2866629\n[1] 0.2788856\n[1] 0.335547\n[1] 0.2194389\n[1] 0.1966283\n[1] 0.1742341\n\n\nCode\nrate_of_change\n\n\n [1] 0.8991631 2.0303310 1.5599834 0.8646199 0.3549419 0.1920811 0.1695208\n [8] 0.2868890 0.2866629 0.2788856 0.3355470 0.2194389 0.1966283 0.1742341\n\n\nCode\nx_axis = c(\"2008-2009\",\"2009-2010\",\"2010-2011\",\"2011-2012\",\"2012-2013\",\"2013-2014\",\"2014-2015\",\"2015-2016\",\"2016-2017\",\"2017-2018\",\"2018-2019\",\"2019-2020\",\"2020-2021\",\"2021-2022\")\nmode(x_axis)\n\n\n[1] \"character\"\n\n\nCode\nrow_names &lt;- c(\"rate_of_change\", \"x_axis\")\ndf &lt;- data.frame(rate_of_change, x_axis)\n\nggplot(df, aes(x = x_axis, y = as.numeric(rate_of_change))) + geom_col() +\n  labs(title = \"Rate of Increase in Literacy by Years\") + \n  xlab(\"Rate of Change\") + \n  ylab(\"Year\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\nCode\n#GRAPH---3\ndata$`Happy(55-64)(%)`[9] &lt;- 62.3001\n\nhappy_18_24_pop &lt;- sapply(data$`Happy(18-24)(%)`, function(x) {x * data$`Pop(18-24)`[which(data$`Happy(18-24)(%)` == x)]})\nhappy_25_34_pop &lt;- sapply(data$`Happy(25-34)(%)`, function(x) {x * data$`Pop(25-34)`[which(data$`Happy(25-34)(%)` == x)]})\nhappy_35_44_pop &lt;- sapply(data$`Happy(35-44)(%)`, function(x) {x * data$`Pop(35-44)`[which(data$`Happy(35-44)(%)` == x)]})\nhappy_45_54_pop &lt;- sapply(data$`Happy(45-54)(%)`, function(x) {x * data$`Pop(45-54)`[which(data$`Happy(45-54)(%)` == x)]})\nhappy_55_64_pop &lt;- sapply(data$`Happy(55-64)(%)`, function(x) {x * data$`Pop(55-64)`[which(data$`Happy(55-64)(%)` == x)]})\nhappy_65_pop &lt;- sapply(data$`Happy(65+)(%)`, function(x) {x * data$`Pop(65+)`[which(data$`Happy(65+)(%)` == x)]})\n\nhappy_pop_df &lt;- data.frame(happy_18_24_pop, happy_25_34_pop, happy_35_44_pop, happy_45_54_pop, happy_55_64_pop, happy_65_pop)\nhappy_pop_total_df &lt;- happy_pop_df |&gt; mutate(Total_Happy = rowSums(happy_pop_df))\n\n\nhappy_pop_total_ratio &lt;- sapply(as.numeric(happy_pop_total_df$Total_Happy), function(x) {x / as.numeric(data$`Pop(Total)`[which(happy_pop_total_df$Total_Happy == x)])})\nprint(happy_pop_total_ratio)\n\n\n [1] 38.24621 37.41853 42.42036 43.33331 42.70288 41.59463 39.83181 40.27278\n [9] 43.78367 41.59795 38.40338 37.92216 35.04362 36.03976 36.52276\n\n\nCode\nggplot(data, aes(x = Year)) +\n    geom_line(aes(y = as.numeric(`Literate(%)`), color = \"red\", group=2)) +\n  geom_line(aes(y = happy_pop_total_ratio, color = \"blue\", group=1)) + \n  labs(title = \"Literacy and Happiness by Years\") + ylab(\"Literate(%)\")\n\n\n\n\n\nCode\n#Pie Plot\n\nhappiness_percentages &lt;- data[11, c(\"Happy(18-24)(%)\", \"Happy(25-34)(%)\", \"Happy(35-44)(%)\", \n                                    \"Happy(45-54)(%)\", \"Happy(55-64)(%)\", \"Happy(65+)(%)\")]\nhappiness_percentages\n\n\n   Happy(18-24)(%) Happy(25-34)(%) Happy(35-44)(%) Happy(45-54)(%)\n11        55.35172        53.24284        50.74637        47.84929\n   Happy(55-64)(%) Happy(65+)(%)\n11        55.65419       61.1995\n\n\nCode\nactual_populations &lt;- as.numeric(happiness_percentages)\n\npie(actual_populations, labels = (c(\"Happy(18-24)(%)\", \"Happy(25-34)(%)\", \"Happy(35-44)(%)\", \n                                            \"Happy(45-54)(%)\", \"Happy(55-64)(%)\", \"Happy(65+)(%)\")), main = \"Population Distribution by Age Group (2018)\")\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Data",
    "section": "",
    "text": "Literacy\nhttps://data.tuik.gov.tr/Bulten/DownloadIstatistikselTablo?p=yXmIYK8WxbFjx9vwEP4DRDs/0QI39KP4NNmdD6DRUPH18uHwGPANE1RP22gwvNrY\n\n\nHappiness\nhttps://data.tuik.gov.tr/Bulten/DownloadIstatistikselTablo?p=N89Qbttng2OjG24yrCEBzaOzuq4X8by6elSnnwevHden73AZWfHzCEqdOEI/YDAs\n\n\nPopulation\nhttps://data.tuik.gov.tr/Bulten/DownloadIstatistikselTablo?p=f2jiwkpabpX7vcxzn4xamSZjOnq4344Y0rlb9MSlQBzyaBzjBG2iLIb2RP0Rk03d\n\n\n\n\n Back to top"
  }
]